scalar Date

type Post @key(fields: "id") {
  id: Int!
  title: String!
  text: String!
  imageUrl: String!
  user: User
  created: Date!
  updated: Date!
  category: Category
}

type Category {
  id: Int!
  name: String!
  posts: [Post]
}

extend type User @key(fields: "id") {
  id: String! @external
  posts: [Post]
}

extend type Query {
  post(id: Int!): Post
  userPosts(id: String!): [Post]
  posts: [Post]
  categories: [Category]
  category(id: Int): Category
}

extend type Mutation {
  createCategory(createCategoryInput: CreateCategoryInput): Category
  editCategory(editCategoryInput: EditCategoryInput): Boolean
  createPost(createPostInput: CreatePostInput): Post
  editPost(editPostInput: EditPostInput): Boolean
  changeCategoryPost(changeCategoryPostInput: ChangeCategoryPostInput): Boolean
  deleteCategory(id: Int!): Boolean
  deletePost(id: Int!): Boolean
  deleteUserPosts(id: String!): Boolean
}

input CreateCategoryInput {
  name: String!
}

input EditCategoryInput {
  id: Int!
  name: String!
}

input CreatePostInput {
  title: String!
  text: String!
  category: Int!
  imageUrl: String!
}

input EditPostInput {
  id: Int!
  title: String!
  text: String!
}

input ChangeCategoryPostInput {
  id: Int!
  category: Int!
}
